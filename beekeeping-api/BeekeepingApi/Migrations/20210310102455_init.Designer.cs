// <auto-generated />
using System;
using BeekeepingApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeekeepingApi.Migrations
{
    [DbContext(typeof(BeekeepingContext))]
    [Migration("20210310102455_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BeekeepingApi.Models.Apiary", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("FarmId")
                        .HasColumnType("bigint");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.ToTable("Apiaries");
                });

            modelBuilder.Entity("BeekeepingApi.Models.ApiaryBeehive", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ApiaryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ArriveDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("BeehiveId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DepartDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("X")
                        .HasColumnType("float");

                    b.Property<double>("Y")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ApiaryId");

                    b.HasIndex("BeehiveId");

                    b.ToTable("ApiaryBeehives");
                });

            modelBuilder.Entity("BeekeepingApi.Models.Beehive", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AcquireDay")
                        .HasColumnType("datetime2");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<long>("ManufacturerId")
                        .HasColumnType("bigint");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Beehives");
                });

            modelBuilder.Entity("BeekeepingApi.Models.Farm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Farms");
                });

            modelBuilder.Entity("BeekeepingApi.Models.FarmWorker", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("FarmId")
                        .HasColumnType("bigint");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("UserId", "FarmId");

                    b.HasIndex("FarmId");

                    b.ToTable("FarmWorkers");
                });

            modelBuilder.Entity("BeekeepingApi.Models.Manufacturer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("BeekeepingApi.Models.Super", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BeehiveId")
                        .HasColumnType("bigint");

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<DateTime>("InstallationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BeehiveId");

                    b.ToTable("Supers");
                });

            modelBuilder.Entity("BeekeepingApi.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BeekeepingApi.Models.Apiary", b =>
                {
                    b.HasOne("BeekeepingApi.Models.Farm", "Farm")
                        .WithMany()
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("BeekeepingApi.Models.ApiaryBeehive", b =>
                {
                    b.HasOne("BeekeepingApi.Models.Apiary", "Apiary")
                        .WithMany("ApiaryBeehives")
                        .HasForeignKey("ApiaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeekeepingApi.Models.Beehive", "Beehive")
                        .WithMany("ApiaryBeehives")
                        .HasForeignKey("BeehiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apiary");

                    b.Navigation("Beehive");
                });

            modelBuilder.Entity("BeekeepingApi.Models.Beehive", b =>
                {
                    b.HasOne("BeekeepingApi.Models.Manufacturer", "Manufacturer")
                        .WithMany("Beehives")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("BeekeepingApi.Models.FarmWorker", b =>
                {
                    b.HasOne("BeekeepingApi.Models.Farm", "Farm")
                        .WithMany("FarmWorkers")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeekeepingApi.Models.User", "User")
                        .WithMany("FarmWorkers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BeekeepingApi.Models.Super", b =>
                {
                    b.HasOne("BeekeepingApi.Models.Beehive", "Beehive")
                        .WithMany("Supers")
                        .HasForeignKey("BeehiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beehive");
                });

            modelBuilder.Entity("BeekeepingApi.Models.Apiary", b =>
                {
                    b.Navigation("ApiaryBeehives");
                });

            modelBuilder.Entity("BeekeepingApi.Models.Beehive", b =>
                {
                    b.Navigation("ApiaryBeehives");

                    b.Navigation("Supers");
                });

            modelBuilder.Entity("BeekeepingApi.Models.Farm", b =>
                {
                    b.Navigation("FarmWorkers");
                });

            modelBuilder.Entity("BeekeepingApi.Models.Manufacturer", b =>
                {
                    b.Navigation("Beehives");
                });

            modelBuilder.Entity("BeekeepingApi.Models.User", b =>
                {
                    b.Navigation("FarmWorkers");
                });
#pragma warning restore 612, 618
        }
    }
}
